(self.webpackChunk=self.webpackChunk||[]).push([[6104],{7940:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var a=n(4165),o=n(5861),r=n(7294),s=n(3444),i=n(7974),c=n(7425);function l(e,t,n){return d.apply(this,arguments)}function d(){return(d=(0,o.Z)((0,a.Z)().mark((function e(t,n,o){var r,c,l,d,u;return(0,a.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=void 0,c=void 0,e.t0=t,e.next="selendra"===e.t0?5:7;break;case 5:return r="wss://rpc.selendra.org",e.abrupt("break",8);case 7:console.log("Unknown socket url provided, no connection made.");case 8:if(void 0!==r){e.next=12;break}return e.abrupt("return");case 12:return l=new s.U(r),e.next=15,i.G.create({provider:l});case 15:d=e.sent,(u=n.split(".")).forEach((function(e){e in d&&(d=d[e])})),e.t1=u[0],e.next="consts"===e.t1?21:"query"===e.t1?23:28;break;case 21:return c=d.toString(),e.abrupt("break",29);case 23:return e.next=25,d();case 25:return c=(c=e.sent).toString(),e.abrupt("break",29);case 28:console.log("Unknown path prefix ("+u[0]+") in "+n);case 29:return e.abrupt("return",c);case 30:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(e,t,n,a){switch(t){case"humanReadable":(0,c.HumanReadable)(e,n,a);break;case"blocksToDays":(0,c.BlocksToDays)(e,a);break;default:return void console.log("Ignoring unknown filter type")}}const p=function(e){var t=e.network,n=e.path,s=e.defaultValue,i=e.filter,c=void 0===i?void 0:i,d=(0,r.useState)(""),p=d[0],h=d[1];return t=t.toLowerCase(),(0,r.useEffect)((function(){void 0!==c?u(s.toString(),c,t,h):h(s.toString());var e=void 0;if("selendra"===t)e="wss://rpc.selendra.org";else console.log("Unknown network provided, "+t);if(void 0===e)console.log("Failed to connect to a valid websocket, applying default");else{var r=function(){var e=(0,o.Z)((0,a.Z)().mark((function e(){var o;return(0,a.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,l(t,n,h);case 2:if(void 0!==(o=e.sent)){e.next=7;break}return e.abrupt("return");case 7:void 0!==c?u(o,c,t,h):h(o);case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();try{r()}catch(i){console.log(i)}}}),[]),p}},7425:e=>{var t={selendra:{precision:1e10,symbol:"SEL"}};e.exports={HumanReadable:function(e,n,a){var o=void 0;"selendra"===n?(o=3,e=parseFloat(e),a((e=Number.isInteger(e/t[n].precision)?e/t[n].precision+" "+t[n].symbol:(e/t[n].precision).toFixed(o)+" "+t[n].symbol).toString())):console.log("Unknown network type found when attempting to apply 'Human Readable' filter")},BlocksToDays:function(e,t){t((e=6*e/86400).toString())}}},3706:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),s=n(7940),i=["components"],c={id:"learn-accounts",title:"Selendra Accounts",sidebar_label:"Selendra Accounts",description:"An explanation of accounts, indices, identity, and reaping.",keywords:["account","selendra account","selendrajs","indices","identity","reaping"],slug:"../learn-accounts"},l=void 0,d={unversionedId:"learn/learn-accounts",id:"learn/learn-accounts",title:"Selendra Accounts",description:"An explanation of accounts, indices, identity, and reaping.",source:"@site/../docs/learn/learn-accounts.md",sourceDirName:"learn",slug:"/learn-accounts",permalink:"/docs/learn-accounts",draft:!1,editUrl:"https://github.com/selendra/selendra-wiki/edit/master/docs/learn/learn-accounts.md",tags:[],version:"current",frontMatter:{id:"learn-accounts",title:"Selendra Accounts",sidebar_label:"Selendra Accounts",description:"An explanation of accounts, indices, identity, and reaping.",keywords:["account","selendra account","selendrajs","indices","identity","reaping"],slug:"../learn-accounts"},sidebar:"docs",previous:{title:"Bug Bounty",permalink:"/docs/maintain-bug-bounty"},next:{title:"Account Generation",permalink:"/docs/learn-account-generation"}},u={},p=[{value:"Account Address",id:"account-address",level:2},{value:"Mnemonic and Address Generation",id:"mnemonic-and-address-generation",level:3},{value:"Obtaining and Managing an Address",id:"obtaining-and-managing-an-address",level:3},{value:"Account Balance Types",id:"account-balance-types",level:2},{value:"Unlocking Locks",id:"unlocking-locks",level:3},{value:"Existential Deposit and Reaping",id:"existential-deposit-and-reaping",level:2},{value:"Account Identity",id:"account-identity",level:2},{value:"Proxy Accounts",id:"proxy-accounts",level:2},{value:"Multi-signature Accounts",id:"multi-signature-accounts",level:2},{value:"Resources",id:"resources",level:2}],h={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document covers the basics of Selendra\naccounts. See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-advanced"},"Advanced Account")," page for more information about\naccounts such as ",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-advanced#derivation-paths"},"account derivation")," and\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-advanced#indices"},"indices"),". For a more in-depth explanation of the cryptography\nbehind Selendra accounts, please see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-cryptography"},"the cryptography page"),"."),(0,r.kt)("h2",{id:"account-address"},"Account Address"),(0,r.kt)("p",null,"An address is the public part of a Selendra\naccount. The private part is the key used to access this address. The public and private parts\ntogether make up a Selendra account. You can\nthink of the public address of your account like your mailbox and the private key like the key to\nopen that mailbox. Anybody can send mail to your mailbox, but only you can access them as only you\nhave access to its key. In the context of\nSelendra accounts, anybody can send tokens to\nyour public address but only you can transact with them using your private key. That is why you\nshould keep your private key secret."),(0,r.kt)("h3",{id:"mnemonic-and-address-generation"},"Mnemonic and Address Generation"),(0,r.kt)("p",null,"A valid account requires a private key that can sign on to one of the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/build-protocol-info#cryptography"},"supported curves and signature schemes"),". Without a\nprivate key an account cannot sign anything. In\nSelendra there are some exceptions of accounts\nthat do not have private keys (i.e. key-less accounts). Such accounts are\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-multisig"},"multi-signature accounts")," and\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-proxies/#anonymous-proxies"},"anonymous proxies")," that are not discussed here and are meant\nfor an advanced audience."),(0,r.kt)("p",null,"Most wallets generate a mnemonic phrase for users to back up their wallets and generate a private\nkey from the mnemonic. Not all wallets use the same algorithm to convert from mnemonic phrase to\nprivate key, which affects the ability to use the same mnemonic phrase in multiple wallets. Wallets\nthat use different measures will arrive at a different set of addresses from the exact mnemonic\nphrase."),(0,r.kt)("admonition",{title:"Not all wallets use the same algorithm to convert from mnemonic phrase to private key",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://docs.substrate.io/reference/command-line-tools/subkey/"},"Subkey")," and Selendra-JS based\nwallets use the BIP39 dictionary for mnemonic generation, but use the entropy byte array to generate\nthe private key, while full BIP39 wallets (like Ledger) use 2048 rounds of PBKDF2 on the mnemonic.\nThe same mnemonic may generate different private keys on other wallets due to the various\ncryptographic algorithms used. See\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-bip39"},"Substrate BIP39 Repo")," for more information.")),(0,r.kt)("p",null,"A typical mnemonic phrase generated by\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.substrate.io/reference/command-line-tools/subkey/"},"the Subkey tool")," is shown below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"'caution juice atom organ advance problem want pledge someone senior holiday very'\n")),(0,r.kt)("p",null,"Its corresponding ",(0,r.kt)("em",{parentName:"p"},"private/public keypair")," is also shown."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Secret seed (Private key): 0x056a6a4e203766ffbea3146967ef25e9daf677b14dc6f6ed8919b1983c9bebbc\nPublic key (SS58): 5F3sa2TJAWMqDhXG6jhV4N8ko9SxwGy8TpaNS1repo5EYjQX\n")),(0,r.kt)("p",null,"Selendra default address format is the ",(0,r.kt)("inlineCode",{parentName:"p"},"MultiAddress")," type. This means that the same mnemonic phrase\nwill generate public keys for different parachains. For more information see the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-advanced#address-format"},"Address Format")," section on the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-advanced"},"Advanced Account")," page."),(0,r.kt)("h3",{id:"obtaining-and-managing-an-address"},"Obtaining and Managing an Address"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To learn more about generating accounts on\nSelendra visit the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-generation"},"Account Generation page"),".")),(0,r.kt)("h2",{id:"account-balance-types"},"Account Balance Types"),(0,r.kt)("p",null,"In Selendra there are different types of\nbalance depending on the account activity. Different balance types indicate whether your balance can\nbe used for transfers, to pay fees, or must remain frozen and unused due to an on-chain requirement.\nBelow we give an example of different balance types on Selendra."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"total")," balance indicates the total number of tokens in the account. Note that this number\ndoes not necessarily correspond to the tokens you are allowed to transfer. In the example the\ntotal number of tokens in 0.6274 SEL.\nThe ",(0,r.kt)("strong",{parentName:"li"},"transferrable")," balance indicates the number of tokens that are free to be transferred. This\nis calculated by subtracting the number of ",(0,r.kt)("em",{parentName:"li"},"locked")," and ",(0,r.kt)("em",{parentName:"li"},"reserved")," tokens from the total number of\ntokens. Locked funds correspond to tokens used in staking, governance, and vested transfers (see\nbelow). In the example, the transferrable balance is 0.0106 SEL."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"vested")," balance indicates tokens that were sent to the account and that are released with a\nspecific time schedule. The tokens are owned by the account but are ",(0,r.kt)("em",{parentName:"li"},"locked")," and become available\nfor transfer after a specific number of blocks. In the example, the vested balance is 0.25 SEL."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"bonded")," balance indicates the number of tokens that are ",(0,r.kt)("em",{parentName:"li"},"locked")," for on-chain participation\nto staking. In the example the bonded balance is 0.4 SEL."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"democracy")," balance indicates the number of tokens that are ",(0,r.kt)("em",{parentName:"li"},"locked")," for on-chain\nparticipation to democracy (i.e. voting for referenda and council). In the example, the democracy\nbalance is 0.4 SEL."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"redeemable")," balance indicates the number of tokens that are ready to be unlocked to become\ntransferrable again. Those tokens already went through the unbonding period. In this case, the\nredeemable balance is 0.1 SEL."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"locked")," balance indicates the number of tokens that are frozen for on-chain participation\nto staking and democracy, or for vested transfers. ",(0,r.kt)("strong",{parentName:"li"},"Locks do not stack"),", which means that if you\nhave different locks the total locked balance is not the addition of all single locks. Instead,\n",(0,r.kt)("strong",{parentName:"li"},"the biggest lock decides the total locked balance"),". In the example, the locked balance is 0.55\nSEL because the biggest lock is on democracy (0.55 SEL)."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"reserved"),' balance indicates the number of tokens that are frozen for on-chain activity\nother than staking, governance, and vested transfers. Such activity can be setting an identity or\na proxy. Reserved funds are held due to on-chain requirements and can usually be freed by taking\nsome on-chain action. For example, the "Identity" pallet reserves funds while an on-chain identity\nis registered, but by clearing the identity, you can unreserve the funds and make them free again.\nThe same applies to proxies. The idea is that those actions require some network memory usage that\nis not given for free. In the example we created a governance proxy and the reserved funds for\nthis are 0.0668 SEL.')),(0,r.kt)("h3",{id:"unlocking-locks"},"Unlocking Locks"),(0,r.kt)("admonition",{title:"Locks do not stack!",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The biggest lock decides the total amount of locked funds. See\n",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/LHgY7ds_bZ0"},"Polkadot Explained Videos")," that will guide you in the process\nof unlocking funds in the example above.")),(0,r.kt)("p",null,"In the example, we mentioned that the locked balance is 0.55 SEL because the biggest lock is on\ndemocracy and is 0.55 SEL. As soon as the democracy lock is removed the next biggest lock is on\nstaking 0.5 SEL (bonded 0.4 SEL + redeemable 0.1 SEL). This means that the locked balance will be\n0.5 SEL, and 0.05 SEL will be added to the transferrable balance. After redeeming the unbonded 0.1\nSEL, the locked balance will be 0.4 SEL, and an additional 0.1 SEL will be added to the\ntransferrable balance. Now the biggest lock is still the bonded one. This means that even if we\nremove the vested lock, the locked balance will still be 0.4 SEL and no tokens will be added to the\ntransferrable balance. To free those bonded tokens we will need to unbond them and wait for the\nunbonding period to make them redeemable. If we remove the proxy the reserved funds will be\nautomatically added to the transferrable balance."),(0,r.kt)("h2",{id:"existential-deposit-and-reaping"},"Existential Deposit and Reaping"),(0,r.kt)("p",null,"When you generate an account (address), you only generate a ",(0,r.kt)("em",{parentName:"p"},"key")," that lets you access it. The\naccount does not exist yet on-chain. For that, it needs the existential deposit of\n",(0,r.kt)(s.Z,{network:"selendra",path:"query.balances.existentialDeposit",defaultValue:1e10,filter:"humanReadable",mdxType:"RPC"}),"."),(0,r.kt)("p",null,"Having an account go below the existential deposit causes that account to be ",(0,r.kt)("em",{parentName:"p"},"reaped"),". The account\nwill be wiped from the blockchain's state to conserve space, along with any funds in that address.\nYou do not lose access to the reaped address - as long as you have your private key or recovery\nphrase, you can still use the address - but it needs a top-up of another existential deposit to be\nable to interact with the chain."),(0,r.kt)("p",null,"Transaction fees cannot cause an account to be reaped. Since fees are deducted from the account\nbefore any other transaction logic, accounts with balances ",(0,r.kt)("em",{parentName:"p"},"equal to")," the existential deposit cannot\nconstruct a valid transaction. Additional funds will need to be added to cover the transaction fees."),(0,r.kt)("p",null,"Here's another way to think about existential deposits. Ever notice those ",(0,r.kt)("inlineCode",{parentName:"p"},"Thumbs.db")," files on\nWindows or ",(0,r.kt)("inlineCode",{parentName:"p"},".DS_Store")," files on Mac? Those are junk; they serve no specific purpose other than\nmaking previews a bit faster. If a folder is empty saved for such a file, you can remove the folder\nto clear the junk off your hard drive. That does not mean you lose access to this folder forever -\nyou can always recreate it. You have the ",(0,r.kt)("em",{parentName:"p"},"key"),", after all - you're the computer's owner. It just\nmeans you want to keep your computer clean until you maybe end up needing this folder again and then\nrecreate it. Your address is like this folder - it gets removed from the chain when nothing is in it\nbut gets put back when it has the existential deposit."),(0,r.kt)("h2",{id:"account-identity"},"Account Identity"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/tree/master/frame/identity"},"Identities pallet")," built\ninto Selendra allows users to attach on-chain metadata to their accounts. Independent registrars can\nverify this metadata to provide trustworthiness. To learn more about how to set or release an\nidentity, how to define sub-accounts, or how to become a registrar, please read\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-identity"},"this guide"),"."),(0,r.kt)("h2",{id:"proxy-accounts"},"Proxy Accounts"),(0,r.kt)("p",null,"Selendra comes with a generalized proxy account system that allows users to keep keys in cold\nstorage while proxies act on their behalf with restricted (or unrestricted) functionality. See the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-proxies"},"proxies")," page for more information."),(0,r.kt)("h2",{id:"multi-signature-accounts"},"Multi-signature Accounts"),(0,r.kt)("p",null,"Multi-signature accounts are accounts created from several standard accounts (or even other\nmulti-sig accounts). For a full explanation, please see the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-account-multisig"},"Multi-signature accounts page"),"."),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"})))}m.isMDXComponent=!0},3971:()=>{},6601:()=>{}}]);