"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7211],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,m=d["".concat(p,".").concat(u)]||d[u]||h[u]||i;return t?a.createElement(m,o(o({ref:n},s),{},{components:t})):a.createElement(m,o({ref:n},s))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1294:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=["components"],l={id:"build-hrmp-channels",title:"Opening HRMP Channels",sidebar_label:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",keywords:["HRMP","parachain","Cardamom","proposal"],slug:"../build-hrmp-channels"},p=void 0,c={unversionedId:"build/build-hrmp-channels",id:"build/build-hrmp-channels",title:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",source:"@site/../docs/build/build-hrmp-channels.md",sourceDirName:"build",slug:"/build-hrmp-channels",permalink:"/docs/build-hrmp-channels",draft:!1,editUrl:"https://github.com/selendra/selendra-wiki/edit/master/docs/build/build-hrmp-channels.md",tags:[],version:"current",frontMatter:{id:"build-hrmp-channels",title:"Opening HRMP Channels",sidebar_label:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",keywords:["HRMP","parachain","Cardamom","proposal"],slug:"../build-hrmp-channels"},sidebar:"docs",previous:{title:"SS58 Registry",permalink:"/docs/build-ss58-registry"},next:{title:"Integration Initiation",permalink:"/docs/build-integration"}},s={},h=[{value:"Opening HRMP channel: parachain to parachain",id:"opening-hrmp-channel-parachain-to-parachain",level:2}],d={toc:h};function u(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/learn-xcm#xcmp-lite-hrmp"},"HRMP")," has the same interface and functionality as\n",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-xcm#xcmp-cross-chain-message-passing"},"XCMP")," but is much more demanding on\nresources since it passes all messages via the Relay Chain. When XCMP is implemented on Polkadot,\nHRMP is planned to be deprecated and phased out in favor of it."),(0,i.kt)("h2",{id:"opening-hrmp-channel-parachain-to-parachain"},"Opening HRMP channel: parachain to parachain"),(0,i.kt)("p",null,"To open a channel from one parachain to another that are not common good chains on Polkadot, the\ngovernance of each parachain needs to declare its intent to open a channel on the Relay Chain, and\nthe second chain needs to accept and do the same."),(0,i.kt)("p",null,"In order to do this, the calls to be dispatched from both chains are:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"hrmp > hrmpInitOpenChannel(recipient, proposedMaxCapacity, proposedMaxMessageSize)"),": this call\ninitiates opening a channel from a parachain to a given recipient with given channel")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"hrmp > hrmpAcceptOpenChannel(sender)"),": accepting the channel open request from the given sender."))),(0,i.kt)("p",null,"Each parachain is to use its own governance process to execute this. The call will be executed on\nthe Relay Chain."))}u.isMDXComponent=!0}}]);