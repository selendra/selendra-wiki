"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8067],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"learn-implementations",title:"Selendra Implementations",sidebar_label:"Selendra Implementations",description:"Learn about the different Selendra implementations.",keywords:["implementations","wasm","meta protocol"],slug:"../learn-implementations"},s=void 0,c={unversionedId:"learn/learn-implementations",id:"learn/learn-implementations",title:"Selendra Implementations",description:"Learn about the different Selendra implementations.",source:"@site/../docs/learn/learn-implementations.md",sourceDirName:"learn",slug:"/learn-implementations",permalink:"/docs/learn-implementations",draft:!1,editUrl:"https://github.com/selendra/selendra-wiki/edit/main/docs/learn/learn-implementations.md",tags:[],version:"current",frontMatter:{id:"learn-implementations",title:"Selendra Implementations",sidebar_label:"Selendra Implementations",description:"Learn about the different Selendra implementations.",keywords:["implementations","wasm","meta protocol"],slug:"../learn-implementations"}},p={},m=[{value:"A Wasm-based Meta Protocol",id:"a-wasm-based-meta-protocol",level:2},{value:"Selendra compatibility",id:"selendra-compatibility",level:2},{value:"Selendra-JS Project: Selendra-JS",id:"selendra-js-project-selendra-js",level:3}],d={toc:m};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Selendra is the core protocol of the Network, and while Selendra can be defined as a\nprotocol, a network, or, a type of infrastructure, it best serves to be an ecosystem. For true\ndecentralization, there should be multiple implementations of Selendra. Even being a ",(0,o.kt)("em",{parentName:"p"},"layer 0"),"\nprotocol that attempts to build an interconnected, interoperable and secure Web3 ecosystem, Selendra\nis a complex piece of software, and its formal implementation depends on being built on top of a\ntech stack."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This page will focus on implementations of ",(0,o.kt)("strong",{parentName:"p"},"Selendra's underlying infrastructure")," (i.e. runtime,\nhost).")),(0,o.kt)("h2",{id:"a-wasm-based-meta-protocol"},"A Wasm-based Meta Protocol"),(0,o.kt)("p",null,"Selendra uses WebAssembly (",(0,o.kt)("a",{parentName:"p",href:"/docs/learn-wasm"},"Wasm"),') as a "meta-protocol". This allows for the use of\nany programming language that can be interpreted or compiled into Wasm - being the driver for\nSelendra\'s multiple implementations.'),(0,o.kt)("h2",{id:"selendra-compatibility"},"Selendra compatibility"),(0,o.kt)("p",null,"Selendra can support parachains that are not built on Substrate, In particular, as long as the state\ntransition function (STF) of a shard is abstratced into Wasm, the validators on the network can\nexecute the STF within a Wasm environment."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: chains can also be built on Substrate and are not required to be deployed onto Selendra.\nMore on Selendra's architecture is available on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn-architecture"},"Architecture")," page.")),(0,o.kt)("h3",{id:"selendra-js-project-selendra-js"},"Selendra-JS Project: ","[Selendra-JS][]"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Selendra-JS")," is a ","[JavaScript client][]"," and offers a collection of tools, interfaces, and\nlibraries for Selendra and Substrate."))}u.isMDXComponent=!0}}]);