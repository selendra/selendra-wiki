"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1062],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(a),b=n,y=p["".concat(s,".").concat(b)]||p[b]||c[b]||i;return a?r.createElement(y,o(o({ref:t},u),{},{components:a})):r.createElement(y,o({ref:t},u))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1358:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={id:"build-data",title:"Data Analytics",sidebar_label:"Data",description:"An overview about building with data analytics",keywords:["data","index","query","explorer","dashboard"],slug:"../build-data"},s=void 0,d={unversionedId:"build/build-data",id:"build/build-data",title:"Data Analytics",description:"An overview about building with data analytics",source:"@site/../docs/build/build-data.md",sourceDirName:"build",slug:"/build-data",permalink:"/docs/build-data",draft:!1,editUrl:"https://github.com/selendra/selendra-wiki/edit/master/docs/build/build-data.md",tags:[],version:"current",lastUpdatedBy:"hangsiahong",lastUpdatedAt:1668523426,formattedLastUpdatedAt:"Nov 15, 2022",frontMatter:{id:"build-data",title:"Data Analytics",sidebar_label:"Data",description:"An overview about building with data analytics",keywords:["data","index","query","explorer","dashboard"],slug:"../build-data"},sidebar:"docs",previous:{title:"Oracles",permalink:"/docs/build-oracle"},next:{title:"Wallets",permalink:"/docs/build-wallets"}},u={},c=[{value:"Indexing and Querying",id:"indexing-and-querying",level:2},{value:"Subsquid",id:"subsquid",level:3},{value:"SubQuery",id:"subquery",level:3},{value:"Selendra-based Explorers",id:"selendra-based-explorers",level:3}],p={toc:c};function b(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The tools that accentuate and aggregate the data within blockchains are integral for a multi-chain\nfuture. Parachains will need robust and secure ways to index and aggregate data, such as a data\naggregation layer."),(0,i.kt)("h2",{id:"indexing-and-querying"},"Indexing and Querying"),(0,i.kt)("h3",{id:"subsquid"},"Subsquid"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://subsquid.io/"},"Subsquid")," is an open-source framework for building tailored GraphQL APIs to\nquery Substrate chain state and history."),(0,i.kt)("p",null,"Subsquid replaces direct gRPC node access with perfomant Squid archive gateways, allowing quick\nsynchronization of the API with the historical on-chain data."),(0,i.kt)("p",null,"Subsquid-powered APIs support filtering, pagination, union types, interfaces and full-text search\nout-of-the-box, and can be further extended with custom GraphQL resolvers."),(0,i.kt)("h3",{id:"subquery"},"SubQuery"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://subquery.network/"},"SubQuery")," is an indexer that allows for the indexing, transforming, and\nquerying of Substrate chain data to power applications. The decentralized network acts as a\nchain-agnostic data aggregation, indexing, and querying layer between blockchains and applications."),(0,i.kt)("p",null,"SubQuery abstracts away blockchain-specific data idiosyncrasies using the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/subquery/subql"},"SubQuery SDK"),"."),(0,i.kt)("h3",{id:"selendra-based-explorers"},"Selendra-based Explorers"),(0,i.kt)("p",null,"As you can imagine, blockchain explorers also offer data analytics through an interface where users\ncan examine common data points."),(0,i.kt)("p",null,"Some block explorers in the Selendra ecosystem are listed on the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/build-tools-index##block-explorers"},"tools page"),"."))}b.isMDXComponent=!0}}]);